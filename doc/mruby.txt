= mruby Github
https://github.com/mruby/mruby.git

= int mrb_get_args(mrb_state *mrb, const char *format, ...);

= int mrb_get_args(mrb_state *mrb, const char *format, ...);

= format specifiers: string mruby type C type note

	o: Object [mrb_value]
	C: class/module [mrb_value]
	S: String [mrb_value]
	A: Array [mrb_value]
	H: Hash [mrb_value]
	s: String [char*,mrb_int] Receive two arguments.
	z: String [char*] NUL terminated string.
	a: Array [mrb_value*,mrb_int] Receive two arguments.
	f: Float [mrb_float]
	i: Integer [mrb_int]
	b: Boolean [mrb_bool]
	n: Symbol [mrb_sym]
	d: Data [void*,mrb_data_type const] 2nd argument will be used to check data
	type so it won't be modified
	&: Block [mrb_value]
	*: rest argument [mrb_value*,mrb_int] Receive the rest of the arguments as an array.
	|: optional Next argument of '|' and later are optional.
	?: optional given [mrb_bool] true if preceding argument (optional) is given.

= mrb_value mrb_obj_value(void *p);

= mrb_value mrb_float_value(mrb_float f);

= Fixnum に変換する
mrb_value this_is_fixnum = mrb_fixnum_value(22);

= true を生成する
mrb_value this_is_true = mrb_true_value();

= false を生成する
mrb_value this_is_false = mrb_false_value();

= nil を生成する
mrb_value this_is_nil = mrb_nil_value();

= void *mrb_get_datatype(mrb_state *mrb, mrb_value obj, const struct mrb_data_type *type);

= モジュールを定義する
struct RClass *module = mrb_define_module(mrb, "Sample");

= クラスを定義する
struct RClass *class = mrb_define_class(mrb, "Sample", mrb->object_class);

= メソッドをコールする
mrb_state *mrb;
mrb_value ret;
...
ret = mrb_funcall(mrb, mrb_top_self(mrb), "foo", 1, mrb_fixnum_value(10));

